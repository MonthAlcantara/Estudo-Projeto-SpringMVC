<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/data/jpa 
	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	">
	<!-- Incluindo o suporte ao JSR no Spring (rEsponsável pela validação dos 
		beans) -->
	<mvc:annotation-driven></mvc:annotation-driven>
<!-- 	Realizando mapeamento dos recursos  -->
<!-- Nessa tag eu indico que meus rescursos estão oficialmente no caminho indicado em "location". -->
<!-- eles vvão ser acessados por uma pasta virtual indicada em mapping, onde tudo que estiver dentro dela será -->
<!-- considerado um resource "/**"  -->
	<mvc:resources location="/WEB-INF/resources/" mapping="/resources/**"></mvc:resources>
	
	<!-- Caminho onde o Spring irá procurar a classe que vai responder a requisição 
		vinda do Browser -->
	
	<context:component-scan
		base-package="br.com.treinaweb.springmvc.controllers" />
	
	<!-- bean que vai resolver os problemas das views -->
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	
		<!-- Para converter o que for tratado em java para responder ao usuario 
			ele usará -->
		<!-- o viewClass que está dentro do caminho especificado no value -->
	
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView"></property>
			</bean>
<!-- 			Bean de configuração do Tiles. Responsável por carregar as configurações do Tiles para o Spring  -->
	<bean id="tilesConfigurer"
	class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	<property name="definitions">
	<list>
	<value>/WEB-INF/tiles.xml</value>
	</list>
	</property>
	</bean>
	
<bean id="validator"
	class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
	
	
<!-- 	Spring Data -->
<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" 
destroy-method="close"><!-- Após a utilização da conexão, ele irá fechar a conexão -->

<!-- 											POSTGRES -->
<property name="driverClassName" value="org.postgresql.Driver"></property>
<property name="url" value="jdbc:postgresql://localhost:5432/treinawebspringmvc?useTimezone=true&amp;serverTimezone=UTC"></property>
<property name="username" value="postgres"></property>
<property name="password" value="admin"></property>
												
												<!-- MYSQL -->
												
<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver"></property> -->
<!-- <property name="url" value="jdbc:mysql://localhost:3306/treinawebspringmvc?useTimezone=true&amp;serverTimezone=UTC;"></property> -->
<!-- <property name="username" value="root"></property> -->
<!-- <property name="password" value="root"></property> -->
</bean>

<!-- Entity Manager -->
<bean id="entityManagerFactory" 
class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
<property name="dataSource" ref="dataSource"></property>
<property name="packagesToScan" value="br.com.treinaweb.springmvc.dominios"></property>
<property name="jpaVendorAdapter" >
<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
</property>

<property name="jpaProperties">
<props>
							
							<!-- Dialeto MySQL -->
<!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop> -->
							<!-- Dialeto Postgres -->
							<!-- org.hibernate.dialect.PostgreSQL92Dialect -->
<prop key="hibernate.dialect"> org.hibernate.dialect.PostgreSQLDialect</prop>
<prop key="hibernate.show_sql">true</prop>
<prop key="hibernate.hbm2ddl.auto">update</prop><!--  --> 
</props>

</property>

<!-- <property name="hibernate.temp.use_jdbc_metadata_defaults" value="false"></property> -->
</bean>
<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
<property name="entityManagerFactory" ref="entityManagerFactory"></property>
</bean>	
<jpa:repositories base-package="br.com.treinaweb.springmvc.repositorios"></jpa:repositories>
</beans>